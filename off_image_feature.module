<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_system_info_alter().
 */
function off_image_feature_system_info_alter(&$info, $file, $type) {
  // We dynamically add field_image to content types that implement
  // integration. We must add a corresponding line for each field
  // instance to off_image_feature.info so that Features is aware of the instance
  // and can sucessfully revert the field_instance component back to its
  // default state.
  if ($file->name == 'off_image_feature') {
    $entity_types = off_image_feature_get_entity_types_with_image();
    if (!empty($entity_types)) {
      foreach ($entity_types as $entity_type => $bundles) {
        foreach(array_keys($bundles) as $bundle) {
          $info['features']['field_instance'][] = "$entity_type-$bundle-field_image";
        }
      }
    }
  }
}

/**
 * Implements hook_features_pipe_alter().
 */
function off_image_feature_features_pipe_alter(&$pipe, $data, $export) {
  if (!empty($pipe['field_instance'])) {
    foreach ($pipe['field_instance'] as $delta => $value) {
      $args = explode('-', $value);
      $field_name = $args[2];
      if ($field_name == 'field_image') {
        unset($pipe['field_instance'][$delta]);
      }
    }
  }
}


/**
 * Returns an array of entity types that are enabled via collabco integration.
 */
function off_image_feature_get_entity_types_with_image() {
  // Find all Commons Entity integrations.
  $integrations = module_invoke_all('collabco_integration');
  $entities = array();
  foreach ($integrations as $integration) { 
    if (empty($integration['entity']['node'])) {
      continue;
    }
    foreach ($integration['entity'] as $entity_type) {
      foreach ($entity_type as $bundle => $options) {
        if (!isset($options['exclude_image']) || $options['exclude_image'] == FALSE) {
          $entities['node'][$bundle] = $options;
        }
      }
    }
  }
  return $entities;
}

